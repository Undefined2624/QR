@using Microsoft.AspNetCore.Identity


@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = UserManager.GetUserAsync(User).Result;
    var fullName = user != null ? $"{user.Nombre} {user.ApellidoP} {user.ApellidoM}" : "User";
}

<div class="collapse navbar-collapse" id="navbarNavDarkDropdown">
    <ul class="navbar-nav">

        @if (SignInManager.IsSignedIn(User))
        {
             <li class="nav-item dropdown">
                <a id="manage" class="nav-link dropdown-toggle text-white" asp-area="Identity" role="button" data-bs-toggle="dropdown" aria-expanded="false" asp-page="/Account/Manage/Index" title="Manage">@fullName</a>
                <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="manage">
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Mi perfil</a></li>
                    <li><a class="dropdown-item" asp-controller="Mascotas" >Mis Mascotas</a></li>
                </ul>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-white border-0">Cerrar Sesión</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Iniciar sesión</a>
            </li>
        }

    </ul>
</div>

